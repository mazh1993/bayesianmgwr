library(INLA)
inla.rgeneric.beta.model <-
      function(cmd = c("graph", "Q", "mu", "initial", "log.norm.const", "log.prior", "quit"),
               theta = NULL) {
        envir = parent.env(environment())
        
        interpret.theta <- function() {
          return(list(prec = exp(theta[1L]),
                      rho = 1/(1+exp(-theta[2L])),
                      mu0 = theta[3L]))
        }
        graph <- function() {
          return (inla.as.sparse(matrix(1, n, n)))
        }
        Q <- function() {
          require(Matrix)
          param <- interpret.theta()
          cov.mat <- 1/param$prec * exp(-D/param$rho)
          prec.mat <- solve(cov.mat)
          return(inla.as.sparse(prec.mat))
        }
        mu <- function() {
          return (rep(interpret.theta()$mu, n))
        }
        log.norm.const <- function() {
          return (numeric())
        }
        log.prior <- function() {
          param = interpret.theta()
          res <- dgamma(param$prec, 0.01, 0.01, log = T) + log(param$prec) +
            log(1) + log(param$rho) + log(1 - param$rho) +
            dnorm(param$mu0, 0, 1, log = T)
          return(res)
        }
        initial <- function() {
          return(c(0, 0, 0))
        }
        quit <- function() {
          return(invisible())
        }
        
        if (!length(theta) || is.null(theta)) theta = initial()
        
        val <- do.call(match.arg(cmd), args = list())
        return(val)
      }
 
